generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("users")
}

model Admin {
  id             String   @id @default(uuid())
  email          String   @unique
  passwordHash   String   @map("password_hash")
  name           String?
  lastLoginAt    DateTime? @map("last_login_at")
  createdAt      DateTime @default(now()) @map("created_at")
  updatedAt      DateTime @updatedAt @map("updated_at")

  @@map("admins")
}

model Trip {
  id          String   @id @default(uuid())
  userId      String?  @map("user_id")
  destination String
  duration    Int
  peopleCount Int      @map("people_count")
  budget      Float
  currency    String   @default("USD")
  itinerary   Json
  shareId     String?  @unique @map("share_id")
  shareExpiry DateTime? @map("share_expiry")
  ownerName   String?  @map("owner_name")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@index([userId], map: "trips_user_id_fkey")
  @@index([shareId])
  @@map("trips")
}

model ItineraryGeneration {
  id           String   @id @default(uuid())
  userId       String?  @map("user_id")
  destination  String
  duration     Int
  peopleCount  Int      @map("people_count")
  budget       Float
  currency     String   @default("USD")
  successful   Boolean  @default(true)
  errorMessage String?  @map("error_message") @db.Text
  responseTime Int?     @map("response_time")
  ipAddress    String?  @map("ip_address")
  userAgent    String?  @map("user_agent") @db.Text
  createdAt    DateTime @default(now()) @map("created_at")

  @@index([userId])
  @@index([destination])
  @@index([createdAt])
  @@map("itinerary_generations")
}

model PageView {
  id        String   @id @default(uuid())
  userId    String?  @map("user_id")
  path      String
  referrer  String?
  ipAddress String?  @map("ip_address")
  userAgent String?  @map("user_agent") @db.Text
  duration  Int?
  createdAt DateTime @default(now()) @map("created_at")

  @@index([userId])
  @@index([path])
  @@index([createdAt])
  @@map("page_views")
}

model TripShare {
  id        String   @id @default(uuid())
  tripId    String   @map("trip_id")
  shareId   String   @map("share_id")
  userId    String?  @map("user_id")
  ipAddress String?  @map("ip_address")
  userAgent String?  @map("user_agent") @db.Text
  createdAt DateTime @default(now()) @map("created_at")

  @@index([tripId])
  @@index([shareId])
  @@index([createdAt])
  @@map("trip_shares")
}

model TripDownload {
  id           String   @id @default(uuid())
  tripId       String   @map("trip_id")
  userId       String?  @map("user_id")
  downloadType String   @map("download_type") // 'pdf'
  ipAddress    String?  @map("ip_address")
  userAgent    String?  @map("user_agent") @db.Text
  createdAt    DateTime @default(now()) @map("created_at")

  @@index([tripId])
  @@index([downloadType])
  @@index([createdAt])
  @@map("trip_downloads")
}

model AnalyticsSummary {
  id                    String   @id @default(uuid())
  date                  DateTime @unique
  totalVisits           Int      @default(0) @map("total_visits")
  uniqueVisitors        Int      @default(0) @map("unique_visitors")
  totalItineraries      Int      @default(0) @map("total_itineraries")
  successfulItineraries Int      @default(0) @map("successful_itineraries")
  failedItineraries     Int      @default(0) @map("failed_itineraries")
  totalShares           Int      @default(0) @map("total_shares")
  totalDownloads        Int      @default(0) @map("total_downloads")
  averageResponseTime   Float?   @map("average_response_time")
  topDestinations       Json?    @map("top_destinations")
  updatedAt             DateTime @updatedAt @map("updated_at")

  @@map("analytics_summary")
}
